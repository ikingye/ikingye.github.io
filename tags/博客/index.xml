<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>博客 | 叶王</title>
    <link>https://kingye.me/tags/%E5%8D%9A%E5%AE%A2/</link>
      <atom:link href="https://kingye.me/tags/%E5%8D%9A%E5%AE%A2/index.xml" rel="self" type="application/rss+xml" />
    <description>博客</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh-cn</language><lastBuildDate>Sat, 12 Dec 2020 15:41:22 +0800</lastBuildDate>
    <image>
      <url>https://kingye.me/images/icon_hu5a99a96afa0d5c480d2983cdb70f75bc_28032_512x512_fill_lanczos_center_3.png</url>
      <title>博客</title>
      <link>https://kingye.me/tags/%E5%8D%9A%E5%AE%A2/</link>
    </image>
    
    <item>
      <title>创建一个博客网站</title>
      <link>https://kingye.me/post/2020/have-a-blog/</link>
      <pubDate>Sat, 12 Dec 2020 15:41:22 +0800</pubDate>
      <guid>https://kingye.me/post/2020/have-a-blog/</guid>
      <description>&lt;p&gt;本系列手把手教你使用 &lt;a href=&#34;https://pages.github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Pages&lt;/a&gt; 和 &lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt; 创建一个属于你的网站，包括博客系统，笔记系统等。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;无需购买服务器资源。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;创建博客&#34;&gt;创建博客&lt;/h2&gt;
&lt;p&gt;注：你也可以使用 &lt;a href=&#34;https://github.com/gohugoio/hugo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hexo&lt;/a&gt;, &lt;a href=&#34;https://help.github.com/articles/using-jekyll-with-pages&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;jekyll&lt;/a&gt; 等其他静态博客生成工具，详情自己百度。&lt;/p&gt;
&lt;h3 id=&#34;安装-hugo&#34;&gt;安装 hugo&lt;/h3&gt;
&lt;p&gt;MacOS 安装 hugo&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 若未安装 homebrew，参考这里安装：https://treehouse.github.io/installation-guides/mac/homebrew
brew install hugo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其他系统参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/getting-started/installing#chocolatey-windows&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Windows 安装 hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/getting-started/installing#homebrew-linux&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linux 安装 hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;创建博客-1&#34;&gt;创建博客&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# ilivelearnteach.github.io 为本地目录名，可以随意更改
hugo new site ilivelearnteach.github.io
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;参考：&lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo Quick Start&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;选择一个主题&#34;&gt;选择一个主题&lt;/h3&gt;
&lt;p&gt;假设你喜欢主题 &lt;a href=&#34;https://github.com/olOwOlo/hugo-theme-even&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Even&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/ikingye/imagehost/picgo/20201212160642.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 进入你刚创建的博客目录
cd ilivelearnteach.github.io
# 使用 git 管理你的博客
# 不了解 git 的同学，可以参考教程进行学习（重要不紧急）：https://www.liaoxuefeng.com/wiki/896043488029600
git init
# 添加 even 主题
git submodule add https://github.com/olOwOlo/hugo-theme-even themes/even
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;更多主题见：&lt;a href=&#34;https://themes.gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo Themes&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;配置博客&#34;&gt;配置博客&lt;/h3&gt;
&lt;p&gt;（假设使用 Even 主题）在主题的 exampleSite 目录下有一个 config.toml 文件，将这个 config.toml 文件复制到你的站点目录下，根据自己的需求更改即可。&lt;/p&gt;
&lt;p&gt;注意修改 baseURL 为 &lt;code&gt;&amp;quot;http://ilivelearnteach.github.io/&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;注：具体配置请参考你选择的主题的官方文档&lt;/p&gt;
&lt;h3 id=&#34;创建博客文章&#34;&gt;创建博客文章&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 创建博客文章
hugo new post/my-first-post.md
# 然后打开文件 `ilivelearnteach.github.io/content/post/my-first-post.md`，
# 把 `draft: true` 改成 `draft: false`

# 注意：even 主题使用的是 post，但是很多主题是 posts，所以是下面这个命令，
# 还是那句话，具体参考你选择主题的官方文档
# hugo new posts/my-first-post.md
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;本地预览博客&#34;&gt;本地预览博客&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;打开 &lt;a href=&#34;http://localhost:1313/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://localhost:1313/&lt;/a&gt; 就可以预览你的博客了&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;部署博客&#34;&gt;部署博客&lt;/h2&gt;
&lt;p&gt;注：你还可以使用 &lt;a href=&#34;http://gitlab.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitLab&lt;/a&gt;，&lt;a href=&#34;https://bitbucket.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bitbucket&lt;/a&gt;，或者国内的 &lt;a href=&#34;https://gitee.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gitee&lt;/a&gt;，&lt;a href=&#34;https://coding.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;coding.net&lt;/a&gt; 等部署博客。&lt;/p&gt;
&lt;p&gt;详情参考：&lt;a href=&#34;https://gohugo.io/hosting-and-deployment/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo Hosting &amp;amp; Deployment&lt;/a&gt; 或者进行&lt;a href=&#34;https://www.baidu.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;百度搜索&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;注册-github-账户&#34;&gt;注册 github 账户&lt;/h3&gt;
&lt;p&gt;假设用户名为 &lt;code&gt;ilivelearnteach&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;创建仓库&#34;&gt;创建仓库&lt;/h3&gt;
&lt;p&gt;创建仓库 &lt;code&gt;ilivelearnteach.github.io&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;仓库名必须是 &lt;code&gt;你的用户名.github.io&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;这三个必须&lt;strong&gt;至少&lt;/strong&gt;勾选一个（使仓库生成 main 分支，否则后续会出错）
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/ikingye/imagehost/picgo/20201214011753.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;提交博客&#34;&gt;提交博客&lt;/h3&gt;
&lt;h4 id=&#34;使用-submodule-管理博客内容&#34;&gt;使用 submodule 管理博客内容&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# ilivelearnteach 换成你的用户名
git submodule add -b main https://github.com/ilivelearnteach/ilivelearnteach.github.io public
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;生成博客内容并提交&#34;&gt;生成博客内容并提交&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 生成博客内容
hugo

# 进入 public 目录
cd public

# 提交博客到 git 管理
git add .
git commit -m &amp;quot;my first blog&amp;quot;

# 提交博客到 github
git push origin main
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;稍等一会儿，直接访问 &lt;a href=&#34;https://ilivelearnteach.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://ilivelearnteach.github.io/&lt;/a&gt; 就可以看到博客了。&lt;/p&gt;
&lt;p&gt;PS: GitHub Pages 会自动开启。&lt;/p&gt;
&lt;p&gt;打开 &lt;a href=&#34;https://github.com/ilivelearnteach/ilivelearnteach.github.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/ilivelearnteach/ilivelearnteach.github.io&lt;/a&gt; 的 settings 页面即可以看到。&lt;/p&gt;
&lt;p&gt;如果没有自动开启 GitHub Pages，就手动选择 &lt;code&gt;main&lt;/code&gt; 分支，&lt;code&gt;/ (root)&lt;/code&gt; 路径，点击 &lt;code&gt;Save&lt;/code&gt; 即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/ikingye/imagehost/picgo/20201213162649.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;更多详情参考：&lt;a href=&#34;https://gohugo.io/hosting-and-deployment/hosting-on-github/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo Host on GitHub&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;我们已经搭建了一个基本的博客系统，你已经可以使用喜欢的编辑器（推荐 &lt;a href=&#34;https://code.visualstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VSCode&lt;/a&gt;） 进行文章编写，使用 Git 提交修改到 GitHub，由其自动部署到 GitHub Pages，读者就可以读取到你的新博文。&lt;/p&gt;
&lt;p&gt;但是还存在一些问题，比如：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我们只提交了博客生成的数据，而博客原始数据并没有提交到 GitHub，如果你的博客源码丢失了，就无法找回；&lt;/li&gt;
&lt;li&gt;编写博客后，我们需要手动进行 git 管理，没有实现自动化；&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;管理原始数据&#34;&gt;管理原始数据&lt;/h2&gt;
&lt;h3 id=&#34;新建仓库&#34;&gt;新建仓库&lt;/h3&gt;
&lt;p&gt;如 ilivelearnteach.com&lt;/p&gt;
&lt;p&gt;注：建议为私有仓库，保护博客源码。&lt;/p&gt;
&lt;h3 id=&#34;提交原始数据&#34;&gt;提交原始数据&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 进入你的博客目录
cd path-to-your-blog/

# ilivelearnteach.com 为新建的仓库名
git remote add origin https://github.com/ilivelearnteach/ilivelearnteach.com

# 提交内容
git add .
git commit -m &amp;quot;my blog code&amp;quot;

git branch -M main
# 提交博客到 github
git push -u origin main
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;自动化脚本&#34;&gt;自动化脚本&lt;/h2&gt;
&lt;p&gt;想实现的目标是：每次创建或更新博文，执行 &lt;code&gt;./deploy.sh&lt;/code&gt; 命令，一键完成所有后续动作。&lt;/p&gt;
&lt;h3 id=&#34;创建脚本&#34;&gt;创建脚本&lt;/h3&gt;
&lt;p&gt;在博客根目录创建脚本文件 &lt;code&gt;deploy.sh&lt;/code&gt;，内容为：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;#!/bin/sh

set -x
# 可以修改成自己的博客名
printf &amp;quot;\033[0;32m ilivelearnteach.com Deploying updates to GitHub...\033[0m\n&amp;quot;
cd $(dirname &amp;quot;$0&amp;quot;)

# Commit changes.
msg=&amp;quot;rebuilding site $(date)&amp;quot;
if [ -n &amp;quot;$*&amp;quot; ]; then
	msg=&amp;quot;$*&amp;quot;
fi

# update the theme
git submodule update --remote
# remove old files
rm -rf public/*
# Build the project.
hugo

# Go To Public folder
cd public
# Add changes to git.
git add .
git commit -m &amp;quot;$msg&amp;quot;
# Push to blog repo and trigger building blog.
git push origin main

# push to source repo
cd ..
git add .
git commit -m &amp;quot;$msg&amp;quot;
git push origin main
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;运行脚本&#34;&gt;运行脚本&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 修改文件属性为可执行（只需要第一次执行）
chmod +x deploy.sh

# 创建或修改博客
# 创建博客文章
hugo new post/my-second-post.md
# 然后打开文件 `ilivelearnteach.github.io/content/post/my-second-post.md`，
# 把 `draft: true` 改成 `draft: false`

# 执行脚本，自动提交博客源码和生成的博客到 GitHub，博客将自动更新
./deploy.sh

# 当然你可以写 commit 信息，记录本次博客更新的内容
# ./deploy.sh &amp;quot;Your optional commit message&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;TODO:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建一个包含多个博客的网站，效果参考：&lt;a href=&#34;https://kingye.me&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://kingye.me&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;统计与评论&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
